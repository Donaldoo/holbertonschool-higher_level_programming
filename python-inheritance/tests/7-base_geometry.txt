Module ``7-base_geometry``


Using ``base_geometry``
-----------------------

Importing:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Print int:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("int", 1)

Print str:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("string", "hi")
	Traceback (most recent call last):
	TypeError: string must be an integer

Print list:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("list", [1, 2, 3])
	Traceback (most recent call last):
	TypeError: list must be an integer

Print None:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("none", None)
	Traceback (most recent call last):
	TypeError: none must be an integer

Print boolean:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("bool", True)
	Traceback (most recent call last):
	TypeError: bool must be an integer

Print 0:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("zero", 0)
	Traceback (most recent call last):
	ValueError: zero must be greater than 0

Print negative numbers:
	>>> bg = BaseGeometry()
   	>>> bg.integer_validator("negative", -1)
	Traceback (most recent call last):
	ValueError: negative must be greater than 0

Pass one arg:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator(, 1)
	Traceback (most recent call last):
	SyntaxError: invalid syntax

	>>> bg = BaseGeometry()
	>>> bg.integer_validator(1,)
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'

Pass no args:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Area test:
	>>> bg = BaseGeometry()
	>>> bg.area()
	Traceback (most recent call last):
	Exception: area() is not implemented
